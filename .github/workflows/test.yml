name: test
on:
  workflow_call:
    inputs:
      haxe:
        required: true
        type: string
      arch:
        required: true
        type: string
      sep:
        required: true
        type: string
      ext:
        required: true
        type: string
      os:
        required: true
        type: string

jobs:
  haxe:
    runs-on: ${{ inputs.os }}
    name: (${{ inputs.arch }}bit ${{ inputs.os }}) haxe
    defaults:
      run:
        working-directory: test/haxe
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: setup
        uses: ./.github/workflows/setup
        with:
          haxe: ${{ inputs.haxe }}
      - name: build
        run: haxe compile.hxml --debug -D HXCPP_M${{ inputs.arch }}
      - name: run
        run: bin${{ inputs.sep }}TestMain-debug

  cffi:
    runs-on: ${{ inputs.os }}
    name: (${{ inputs.arch }}bit ${{ inputs.os }}) cffi
    defaults:
      run:
        working-directory: test/cffi
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: setup
        uses: ./.github/workflows/setup
        with:
          haxe: ${{ inputs.haxe }}
      - name: build project
        working-directory: test/cffi/project
        run: haxelib run hxcpp build.xml -Ddebug -DHXCPP_M${{ inputs.arch }}
      - name: build
        run: haxe compile.hxml --debug
      - name: build (utf8)
        run: haxe compile-utf8.hxml --debug
      - name: build (neko)
        run: haxe compile-neko.hxml --debug
      - name: copy
        run: cp project/ndll/*/prime${{ inputs.ext }} bin/neko/prime.ndll
      - name: run
        run: bin${{ inputs.sep }}cpp${{ inputs.sep }}TestMain-debug
      - name: run (utf8)
        run: bin${{ inputs.sep }}cpp-utf8${{ inputs.sep }}TestMain-debug
      - name: run (neko)
        if: inputs.arch == '64'
        working-directory: test/cffi/bin/neko
        run: neko TestMain.n

  telemetry:
    strategy:
      fail-fast: false
      matrix:
        mode: [ debug, release ]
        include:
          - suffix: -debug
            mode: debug
    runs-on: ${{ inputs.os }}
    name: (${{ inputs.arch }}bit ${{ inputs.os }}) telemetry (${{ matrix.mode }})
    defaults:
      run:
        working-directory: test/telemetry
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: setup
        uses: ./.github/workflows/setup
        with:
          haxe: ${{ inputs.haxe }}
      - name: build
        run: haxe compile.hxml ${{ matrix.suffix }} -D HXCPP_M${{ inputs.arch }}
      - name: run
        run: bin${{ inputs.sep }}TestMain${{ matrix.suffix }}
  # debugger:
  #   runs-on: ${{ inputs.os }}
  # cppia:
  #   runs-on: ${{ inputs.os }}
  # native:
  #   runs-on: ${{ inputs.os }}
  # std:
  #   runs-on: ${{ inputs.os }}
  # haxe-suite:
  #   runs-on: ${{ inputs.os }}